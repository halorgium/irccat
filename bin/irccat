#!/usr/bin/env ruby
#
#  Created on 2008-2-17.
#  Copyright (c) 2008. All rights reserved.

require 'optparse'
require 'yaml'

options = {
  :config_filename => './config.yml'
}

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
irc_cat - stdout for irc

Usage: #{File.basename($0)} [options]

Options are:
BANNER

  opts.separator ""

  opts.on("-c", "--config=CONFIG", String, "Path to the config file.", "Default: ./config.yml") do |filename|
    options[:config_filename] = filename
  end

  opts.on("-h", "--help", "Show this help message.") {
    puts opts
    exit
  }
end

parser.parse!(ARGV)

raise "Can't read configuration file (#{options[:config_filename]})" unless File.exists?(options[:config_filename])
config = YAML.load_file(options[:config_filename])

lib_dir = File.dirname(__FILE__) + '/../lib/'
require lib_dir + '/irc_cat'

threads = []
puts "irccat #{IrcCat::VERSION::STRING} (http://irccat.rubyforge.org/)"

Thread.abort_on_exception = true

irc_config = config['irc']
IrcCat::Bot.run(irc_config['host'], irc_config['port'], irc_config['nick'], irc_config['pass']) do |bot|
  puts "Connecting..."
  irc_config['channels'].each do |channel|
    name, pass = channel.split(" ")
    bot.join_channel(name, pass)
  end

  tcp_config = config['tcp']
  if tcp_config['enabled']
    require lib_dir + 'irc_cat/tcp_server'
    IrcCat::TcpServer.run(bot, tcp_config)
  end

  http_config = config['http']
  if http_config['enabled']
    require lib_dir + 'irc_cat/http_server'
    IrcCat::HttpServer.run(bot, http_config)
  end
end
